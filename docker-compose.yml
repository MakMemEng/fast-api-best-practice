version: '3.7'

services:
  db:
    image: mysql:8.0
    restart: always
    # command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    command: >
      mysqld
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
    ports:
      - "3307:3306" # port重複防止のため、local側は3306以外とする
    environment:
      MYSQL_ROOT_PASSWORD: docker
      MYSQL_DATABASE: docker
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
    networks:
      - fastapi_network
    volumes:
      - db_volume:/var/lib/mysql
      #- ./docker/dump_sql/seed.sql.gz:/docker-entrypoint-initdb.d/install_docker.sql.gz
  
  test_db:
    image: mysql:8.0
    restart: always
    # command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    command: >
      mysqld
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
    ports:
      - "3308:3306" # port重複防止のため、local側は3306以外とする
    environment:
      MYSQL_ROOT_PASSWORD: docker
      MYSQL_DATABASE: docker
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
    networks:
      - fastapi_network
    # volumes:
    #   - db_volume:/var/lib/mysql
      #- ./docker/dump_sql/seed.sql.gz:/docker-entrypoint-initdb.d/install_docker.sql.gz

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "80", "--reload", "--log-config", "logger_config.yaml"]
    ports:
      - 8090:80
    volumes:
      - .:/backend
    links:
      - db
    restart: always
    networks:
      - fastapi_network
    tty: true
    environment:
      - IS_DOCKER_UVICORN=1
      - ENV=production


volumes:
  db_volume:
    driver: local

networks:
  fastapi_network:
    name: fastapi_network
    driver: bridge