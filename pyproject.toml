[tool.poetry]
name = "react-fastapi-sample"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.8"
isort = "^5.10.1"
pyproject-flake8 = "^0.0.1-alpha.3"
poethepoet = "^0.13.1"
uvicorn = "^0.17.6"
sentry-sdk = "^1.5.8"
fastapi = "^0.75.0"
SQLAlchemy = "^1.4.32"
pydantic = {extras = ["email", "dotenv"], version = "^1.9.0"}
python-dotenv = "^0.20.0"
mysqlclient = "^2.1.0"
ulid-py = "^1.1.0"
python-jose = "^3.3.0"
passlib = "^1.7.4"
toml = "^0.10.2"
PyYAML = "^6.0"
python-multipart = "^0.0.5"
python-json-logger = "^2.0.2"
mysql-connector-python = "^8.0.28"
bcrypt = "^3.2.0"

[tool.poetry.dev-dependencies]
locust = "^2.8.5"

[tool.black]
line-length = 119

[tool.isort]
profile = "black"
line_length = 119
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0

[tool.flake8]
max-line-length = 119
ignore = "E203,W503,W504"

[tool.poe.tasks]
serve-uvicorn = {"shell" = "uvicorn main:app --host 127.0.0.1 --reload --log-config logger_config.yaml", help="開発用サーバーの起動(DB,uvicorn)"}
serve-build = {"shell" = "docker-compose up --build"}
serve = {"shell" = "docker-compose up"}
test = {"cmd" = "pytest"}
testing-set-data = {"shell" = "echo test"}
format = {"shell" = "black . & isort ."}
makemigrations = {"shell" = "alembic revision --autogenerate", help="DBマイグレーションファイルの自動作成"}
migrate = {"shell" = "alembic upgrade heads", help="DBマイグレーション"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
